AWSTemplateFormatVersion: '2010-09-09'
Description: 'File Sharing Application - S3 bucket and IAM user with least-privilege policies'

Parameters:
  BucketName:
    Type: String
    Description: 'Name for the S3 bucket (must be globally unique)'
    Default: 'file-sharing-app-bucket'
    AllowedPattern: '^[a-z0-9][a-z0-9-]*[a-z0-9]$'
    ConstraintDescription: 'Bucket name must be lowercase, contain only letters, numbers, and hyphens'
    MinLength: 3
    MaxLength: 63

  IAMUserName:
    Type: String
    Description: 'Name for the IAM user'
    Default: 'file-sharing-app-user'
    AllowedPattern: '^[a-zA-Z0-9+=,.@_-]+$'
    ConstraintDescription: 'IAM user name must contain only alphanumeric characters and +=,.@_-'
    MinLength: 1
    MaxLength: 64

  Environment:
    Type: String
    Description: 'Environment tag for resources'
    Default: 'production'
    AllowedValues:
      - 'production'

Resources:
  # S3 Bucket with security and lifecycle configuration
  FileStorageBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref BucketName
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
            BucketKeyEnabled: true
      VersioningConfiguration:
        Status: Enabled
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      LifecycleConfiguration:
        Rules:
          # 1 hour expiration for temporary files
          - Id: OneHourExpiration
            Status: Enabled
            Filter:
              Tag:
                Key: 'expiration'
                Value: '1hour'
            ExpirationInDays: 1
            NoncurrentVersionExpirationInDays: 1
          # 1 day expiration
          - Id: OneDayExpiration
            Status: Enabled
            Filter:
              Tag:
                Key: 'expiration'
                Value: '1day'
            ExpirationInDays: 1
            NoncurrentVersionExpirationInDays: 1
          # 1 week expiration
          - Id: OneWeekExpiration
            Status: Enabled
            Filter:
              Tag:
                Key: 'expiration'
                Value: '1week'
            ExpirationInDays: 7
            NoncurrentVersionExpirationInDays: 7
          # 1 month expiration
          - Id: OneMonthExpiration
            Status: Enabled
            Filter:
              Tag:
                Key: 'expiration'
                Value: '1month'
            ExpirationInDays: 30
            NoncurrentVersionExpirationInDays: 30
          # Cleanup incomplete multipart uploads
          - Id: CleanupIncompleteUploads
            Status: Enabled
            AbortIncompleteMultipartUpload:
              DaysAfterInitiation: 1
      NotificationConfiguration:
        CloudWatchConfigurations:
          - Event: 's3:ObjectCreated:*'
            CloudWatchConfiguration:
              LogGroupName: !Ref S3AccessLogGroup
      Tags:
        - Key: 'Application'
          Value: 'file-sharing-app'
        - Key: 'Environment'
          Value: !Ref Environment
        - Key: 'ManagedBy'
          Value: 'CloudFormation'

  # CloudWatch Log Group for S3 access logging
  S3AccessLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/s3/${BucketName}'
      RetentionInDays: 30
      Tags:
        - Key: 'Application'
          Value: 'file-sharing-app'
        - Key: 'Environment'
          Value: !Ref Environment

  # IAM User with least-privilege permissions
  FileAppUser:
    Type: AWS::IAM::User
    Properties:
      UserName: !Ref IAMUserName
      Tags:
        - Key: 'Application'
          Value: 'file-sharing-app'
        - Key: 'Environment'
          Value: !Ref Environment

  # IAM Policy with minimal required permissions
  FileAppUserPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: 'FileAppS3Policy'
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          # Allow object operations only in the designated bucket
          - Sid: 'AllowS3ObjectOperations'
            Effect: Allow
            Action:
              - 's3:PutObject'
              - 's3:PutObjectAcl'
              - 's3:PutObjectTagging'
              - 's3:GetObject'
              - 's3:GetObjectAcl'
              - 's3:GetObjectTagging'
              - 's3:DeleteObject'
              - 's3:DeleteObjectTagging'
            Resource: 
              - !Sub '${FileStorageBucket}/*'
          # Allow bucket-level operations for presigned URLs and listing
          - Sid: 'AllowS3BucketOperations'
            Effect: Allow
            Action:
              - 's3:ListBucket'
              - 's3:GetBucketLocation'
              - 's3:GetBucketVersioning'
            Resource: !GetAtt FileStorageBucket.Arn
          # Allow head operations for file existence checks
          - Sid: 'AllowS3HeadOperations'
            Effect: Allow
            Action:
              - 's3:HeadObject'
            Resource: 
              - !Sub '${FileStorageBucket}/*'
      Users:
        - !Ref FileAppUser

  # Access Key for the IAM User
  FileAppUserAccessKey:
    Type: AWS::IAM::AccessKey
    Properties:
      UserName: !Ref FileAppUser

  # CloudTrail for audit logging (optional but recommended)
  FileAppCloudTrail:
    Type: AWS::CloudTrail::Trail
    Properties:
      TrailName: !Sub '${BucketName}-audit-trail'
      S3BucketName: !Ref AuditLogsBucket
      S3KeyPrefix: 'cloudtrail-logs/'
      IncludeGlobalServiceEvents: false
      IsMultiRegionTrail: false
      EnableLogFileValidation: true
      EventSelectors:
        - ReadWriteType: All
          IncludeManagementEvents: false
          DataResources:
            - Type: 'AWS::S3::Object'
              Values: 
                - !Sub '${FileStorageBucket}/*'
            - Type: 'AWS::S3::Bucket'
              Values: 
                - !GetAtt FileStorageBucket.Arn
      Tags:
        - Key: 'Application'
          Value: 'file-sharing-app'
        - Key: 'Environment'
          Value: !Ref Environment

  # Separate bucket for CloudTrail audit logs
  AuditLogsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub '${BucketName}-audit-logs'
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      LifecycleConfiguration:
        Rules:
          - Id: DeleteAuditLogsAfter90Days
            Status: Enabled
            ExpirationInDays: 90
      Tags:
        - Key: 'Application'
          Value: 'file-sharing-app'
        - Key: 'Environment'
          Value: !Ref Environment
        - Key: 'Purpose'
          Value: 'audit-logs'

  # Bucket policy for CloudTrail
  AuditLogsBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref AuditLogsBucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: 'AWSCloudTrailAclCheck'
            Effect: Allow
            Principal:
              Service: cloudtrail.amazonaws.com
            Action: 's3:GetBucketAcl'
            Resource: !GetAtt AuditLogsBucket.Arn
          - Sid: 'AWSCloudTrailWrite'
            Effect: Allow
            Principal:
              Service: cloudtrail.amazonaws.com
            Action: 's3:PutObject'
            Resource: !Sub '${AuditLogsBucket}/cloudtrail-logs/*'
            Condition:
              StringEquals:
                's3:x-amz-acl': 'bucket-owner-full-control'

Outputs:
  BucketName:
    Description: 'Name of the S3 bucket for file storage'
    Value: !Ref FileStorageBucket
    Export:
      Name: !Sub '${AWS::StackName}-BucketName'

  BucketArn:
    Description: 'ARN of the S3 bucket'
    Value: !GetAtt FileStorageBucket.Arn
    Export:
      Name: !Sub '${AWS::StackName}-BucketArn'

  BucketRegion:
    Description: 'Region where the S3 bucket is located'
    Value: !Ref 'AWS::Region'
    Export:
      Name: !Sub '${AWS::StackName}-BucketRegion'

  IAMUserName:
    Description: 'Name of the IAM user for the application'
    Value: !Ref FileAppUser
    Export:
      Name: !Sub '${AWS::StackName}-IAMUserName'

  IAMUserArn:
    Description: 'ARN of the IAM user'
    Value: !GetAtt FileAppUser.Arn
    Export:
      Name: !Sub '${AWS::StackName}-IAMUserArn'

  AccessKeyId:
    Description: 'Access Key ID for the IAM user'
    Value: !Ref FileAppUserAccessKey
    Export:
      Name: !Sub '${AWS::StackName}-AccessKeyId'

  SecretAccessKey:
    Description: 'Secret Access Key for the IAM user (store securely)'
    Value: !GetAtt FileAppUserAccessKey.SecretAccessKey
    Export:
      Name: !Sub '${AWS::StackName}-SecretAccessKey'

  CloudTrailArn:
    Description: 'ARN of the CloudTrail for audit logging'
    Value: !GetAtt FileAppCloudTrail.Arn
    Export:
      Name: !Sub '${AWS::StackName}-CloudTrailArn'

  AuditLogsBucket:
    Description: 'Name of the S3 bucket for audit logs'
    Value: !Ref AuditLogsBucket
    Export:
      Name: !Sub '${AWS::StackName}-AuditLogsBucket'